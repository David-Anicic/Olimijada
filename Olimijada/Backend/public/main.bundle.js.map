{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/komponente/botovi/botovi.component.css","./src/app/komponente/botovi/botovi.component.html","./src/app/komponente/botovi/botovi.component.ts","./src/app/komponente/dodavanje-bota/dodavanje-bota.component.css","./src/app/komponente/dodavanje-bota/dodavanje-bota.component.html","./src/app/komponente/dodavanje-bota/dodavanje-bota.component.ts","./src/app/komponente/header/header.component.css","./src/app/komponente/header/header.component.html","./src/app/komponente/header/header.component.ts","./src/app/komponente/izmena-profila/izmena-profila.component.css","./src/app/komponente/izmena-profila/izmena-profila.component.html","./src/app/komponente/izmena-profila/izmena-profila.component.ts","./src/app/komponente/o-nama/o-nama.component.css","./src/app/komponente/o-nama/o-nama.component.html","./src/app/komponente/o-nama/o-nama.component.ts","./src/app/komponente/pocetna/pocetna.component.css","./src/app/komponente/pocetna/pocetna.component.html","./src/app/komponente/pocetna/pocetna.component.ts","./src/app/komponente/prijava/prijava.component.css","./src/app/komponente/prijava/prijava.component.html","./src/app/komponente/prijava/prijava.component.ts","./src/app/komponente/prikaz-botova/prikaz-botova.component.css","./src/app/komponente/prikaz-botova/prikaz-botova.component.html","./src/app/komponente/prikaz-botova/prikaz-botova.component.ts","./src/app/komponente/pristup/pristup.component.css","./src/app/komponente/pristup/pristup.component.html","./src/app/komponente/pristup/pristup.component.ts","./src/app/komponente/profil/profil.component.css","./src/app/komponente/profil/profil.component.html","./src/app/komponente/profil/profil.component.ts","./src/app/komponente/registracija/registracija.component.css","./src/app/komponente/registracija/registracija.component.html","./src/app/komponente/registracija/registracija.component.ts","./src/app/komponente/sidebar-profil/sidebar-profil.component.css","./src/app/komponente/sidebar-profil/sidebar-profil.component.html","./src/app/komponente/sidebar-profil/sidebar-profil.component.ts","./src/app/modeli/Bot.ts","./src/app/modeli/Korisnik.ts","./src/app/moduli/app-routing.module.ts","./src/app/moduli/materialkomponente.module.ts","./src/app/password-validator.directive.ts","./src/app/servisi/auth-guard.service.ts","./src/app/servisi/auth.service.ts","./src/app/servisi/bot.service.ts","./src/app/servisi/igra.service.ts","./src/app/servisi/korisnik.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<app-header></app-header>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './moduli/app-routing.module';\nimport { HeaderComponent } from './komponente/header/header.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PocetnaComponent } from './komponente/pocetna/pocetna.component';\nimport { ONamaComponent } from './komponente/o-nama/o-nama.component';\nimport { RegistracijaComponent } from './komponente/registracija/registracija.component';\nimport { KorisnikService } from './servisi/korisnik.service';\nimport { HttpClientModule, HttpHeaders } from '@angular/common/http';\nimport { PasswordValidatorDirective } from './password-validator.directive';\nimport { PrijavaComponent } from './komponente/prijava/prijava.component';\nimport { ProfilComponent } from './komponente/profil/profil.component';\nimport { SidebarProfilComponent } from './komponente/sidebar-profil/sidebar-profil.component';\nimport { Ng2GoogleChartsModule } from 'ng2-google-charts';\nimport { IzmenaProfilaComponent } from './komponente/izmena-profila/izmena-profila.component';\nimport { MaterialkomponenteModule } from './moduli/materialkomponente.module';\nimport { AuthService } from './servisi/auth.service';\nimport { AuthGuardService } from './servisi/auth-guard.service';\nimport { DodavanjeBotaComponent } from './komponente/dodavanje-bota/dodavanje-bota.component';\nimport { BotService } from './servisi/bot.service';\nimport { IgraService } from './servisi/igra.service';\nimport { PrikazBotovaComponent } from './komponente/prikaz-botova/prikaz-botova.component';\nimport { BotoviComponent } from './komponente/botovi/botovi.component';\nimport { PristupComponent } from './komponente/pristup/pristup.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ONamaComponent,\n        HeaderComponent,\n        PocetnaComponent,\n        RegistracijaComponent,\n        PasswordValidatorDirective,\n        PrijavaComponent,\n        ProfilComponent,\n\t\tIzmenaProfilaComponent,\n\t\tSidebarProfilComponent,\n\t\tDodavanjeBotaComponent,\n\t\tPrikazBotovaComponent,\n\t\tBotoviComponent,\n\t\tPristupComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n\t\tNg2GoogleChartsModule,\n        MaterialkomponenteModule\n    ],\n    providers: [KorisnikService, AuthService, AuthGuardService, BotService, IgraService ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/botovi/botovi.component.css\n// module id = ./src/app/komponente/botovi/botovi.component.css\n// module chunks = main","module.exports = \"<app-dodavanje-bota (nakonDodavanja)=\\\"NakonDodavanja($event)\\\"></app-dodavanje-bota>\\n<app-prikaz-botova [dodatiBot]=\\\"noviBot\\\"></app-prikaz-botova>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/botovi/botovi.component.html\n// module id = ./src/app/komponente/botovi/botovi.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-botovi',\n  templateUrl: './botovi.component.html',\n  styleUrls: ['./botovi.component.css']\n})\nexport class BotoviComponent implements OnInit {\n    noviBot: any;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n    NakonDodavanja(bot: any): void\n    {\n        this.noviBot = bot;\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/komponente/botovi/botovi.component.ts","module.exports = \".kartica\\r\\n{\\r\\n    max-width: 1048px;\\r\\n}\\r\\n\\r\\n.kartica-header-slika\\r\\n{\\r\\n    background-image: url('https://static.independent.co.uk/s3fs-public/styles/story_large/public/thumbnails/image/2017/04/29/10/beer.jpg');\\r\\n    background-size: cover;\\r\\n}\\r\\n\\r\\n.botWrapper\\r\\n{\\r\\n\\twidth: 426px;\\r\\n\\tdisplay: table;\\r\\n\\tpadding-top: 26px;\\r\\n\\tpadding-right: 26px;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\n@media only screen and (max-width: 655px) \\r\\n{\\r\\n\\t.botWrapper\\r\\n\\t{\\r\\n\\t\\twidth: 326px;\\r\\n\\t\\tdisplay: table;\\r\\n\\t\\tpadding-top: 26px;\\r\\n\\t\\tpadding-right: 26px;\\r\\n    \\tmargin: 0 auto;\\r\\n\\t}\\r\\n}\\r\\n\\r\\nmat-card\\r\\n{\\t\\r\\n\\tmin-width: 100%;\\r\\n}\\r\\n\\r\\n.mat-card-title\\r\\n{\\r\\n    font-size: 160%;\\r\\n}\\r\\n\\r\\n.mat-icon\\r\\n{\\r\\n    width: 100px;\\r\\n}\\r\\n\\r\\n#karticaHeaderKorisnik\\r\\n{\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n#headerKorisnika\\r\\n{\\r\\n    display:block;\\r\\n    height: 312px;\\r\\n    width: 100%;\\r\\n    background-image: url('http://www.fullhdwpp.com/wp-content/uploads/programming-and-code-13_www.FullHDWpp.com_.jpg?x69613');\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.pomocniDivHeaderKorisnika\\r\\n{\\r\\n    padding: 26px;\\r\\n}\\r\\n\\r\\n#slikaKorisnika\\r\\n{\\r\\n    height: 128px;\\r\\n    width: 128px;\\r\\n    border: solid 3px #0288D1;\\r\\n    border-radius: 50%;\\r\\n    display: table;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\nmat-chip-list\\r\\n{\\r\\n    display: table;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\nmat-chip\\r\\n{\\r\\n    max-width: 512px;\\r\\n    text-align: center;\\r\\n    text-size: 26px;\\r\\n}\\r\\n\\r\\n.redUBoksu\\r\\n{\\r\\n    padding-top: 18px;\\r\\n}\\r\\n\\r\\ngoogle-chart\\r\\n{\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.divUspeh\\r\\n{\\r\\n    display: table;\\r\\n    table-layout: fixed; /*euqal column width*/\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.celija\\r\\n{\\r\\n    display: table-cell;\\r\\n}\\r\\n\\r\\n.celija:hover\\r\\n{\\r\\n    background-color: #f0f0f0;\\r\\n\\r\\n    -webkit-transition-duration: 0.6s;\\r\\n\\r\\n            transition-duration: 0.6s;\\r\\n}\\r\\n\\r\\n.sadrzajCelije\\r\\n{\\r\\n    display: table;\\r\\n    margin: 0 auto;\\r\\n    min-width: 312px;\\r\\n    min-height: 256px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.sadrzajCelije > h4\\r\\n{\\r\\n    font-size: 300%;\\r\\n}\\r\\n\\r\\n@media (max-width: 986px) { /*breakpoint*/\\r\\n    .celija {\\r\\n        display: block;\\r\\n    }\\r\\n}\\r\\n\\r\\nmat-form-field, button {\\r\\n    width: 100%;\\r\\n    font-size: 96%;\\r\\n    margin-top: 10px;\\r\\n\\r\\n}\\r\\n\\r\\n#fab-upload, #icon-upload {\\r\\n\\twidth: 40px;\\r\\n\\theight: 40px;\\r\\n}\\r\\n\\r\\n.fajlUpload::-webkit-file-upload-button {\\r\\n    visibility: hidden;\\r\\n}\\r\\n\\r\\n.fajlUpload::before\\r\\n{\\r\\n    content: 'Izaberite datoteku';\\r\\n    background: -webkit-linear-gradient(top, #03A9F4, #03A9F4);\\r\\n    border-radius: 10px;\\r\\n    padding: 5px 8px;\\r\\n    color: white;\\r\\n    -webkit-user-select: none;\\r\\n    cursor: pointer;\\r\\n    font-size: 10pt;\\r\\n}\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/dodavanje-bota/dodavanje-bota.component.css\n// module id = ./src/app/komponente/dodavanje-bota/dodavanje-bota.component.css\n// module chunks = main","module.exports = \"<div class=\\\"botWrapper\\\">\\n\\t<mat-card class=\\\"kartica\\\">\\n\\t\\t<mat-card-header>\\n\\t\\t\\t<div mat-card-avatar>\\n\\t\\t\\t\\t<mat-icon class=\\\"ikonica\\\">adb</mat-icon>\\n\\t\\t\\t</div>\\n\\t\\t\\t<mat-card-title>Dodavanje novog bota</mat-card-title>\\n\\t\\t</mat-card-header>\\n\\n\\t\\t<mat-divider></mat-divider> <!-- horizontalna linija -->\\n\\n\\t\\t\\t<!-- Izmena podataka -->\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<form (ngSubmit)=\\\"DodajBota()\\\">\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Naziv bota\\\" [formControl]=\\\"nazivBota\\\">\\n\\t\\t\\t\\t</mat-form-field>\\n\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Igra\\\" [(ngModel)]=\\\"odabranaIgra\\\" name=\\\"igra\\\" [formControl]=\\\"kontrolaZaIgru\\\">\\n\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let igra of igre\\\" [value]=\\\"igra.id\\\" >\\n\\t\\t\\t\\t\\t\\t\\t{{ igra.naziv }}\\n\\t\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t</mat-form-field>\\n\\n\\n\\t\\t\\t\\t<mat-divider></mat-divider> <!-- horizontalna linija -->\\n                <div style=\\\"padding-top: 6px; padding-bottom: 16px;\\\">\\n                    <input type=\\\"file\\\" style=\\\"display: none\\\" name=\\\"fajlUpload\\\" id=\\\"fajlUpload\\\" class=\\\"fajlUpload\\\" #fajlUpload (change)=\\\"PostaviFajl($event)\\\" />\\n\\n\\n                    <button mat-mini-fab (click)=\\\"fajlUpload.click()\\\" id=\\\"fab-upload\\\" style=\\\"background-color: purple;\\\">\\n                        <mat-icon id=\\\"icon-upload\\\">file_upload</mat-icon>\\n                    </button>\\n                    <span style=\\\"width: auto; width: 100px;\\\" *ngIf=\\\"fajlZaUpload == null\\\">\\n                        Niste odabrali fajl\\n                    </span>\\n                    <span style=\\\"width: auto; width: 100px;\\\" *ngIf=\\\"fajlZaUpload != null\\\">\\n                        {{ fajlZaUpload.name }}\\n                    </span>\\n\\n                </div>\\n\\t\\t\\t\\t<mat-divider></mat-divider> <!-- horizontalna linija -->\\n\\n\\t\\t\\t\\t<button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\">\\n\\t\\t\\t\\t\\tSačuvaj izmene\\n\\t\\t\\t\\t</button>\\n\\n\\t\\t\\t\\t<!-- dodati modal za obavestenje da fajl mora biti odabran? -->\\n\\n\\t\\t\\t</form>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/dodavanje-bota/dodavanje-bota.component.html\n// module id = ./src/app/komponente/dodavanje-bota/dodavanje-bota.component.html\n// module chunks = main","import {Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\nimport {Bot} from '../../modeli/Bot';\nimport {Validators, FormControl} from '@angular/forms';\nimport {Igra} from '../../modeli/Igra';\nimport {BotService} from '../../servisi/bot.service';\nimport {IgraService} from '../../servisi/igra.service';\nimport {MatSnackBar} from '@angular/material';\n\n@Component({\n    selector: 'app-dodavanje-bota',\n    templateUrl: './dodavanje-bota.component.html',\n    styleUrls: ['./dodavanje-bota.component.css']\n})\nexport class DodavanjeBotaComponent implements OnInit\n{\n    @Output() nakonDodavanja = new EventEmitter<any>();\n\n    private nazivBota = new FormControl('', [Validators.required]);\n    private odabranaIgra: number;\n    private igre: Igra[];\n    private uspesno: boolean;\n    private neuspesno: boolean;\n    private nijeOdabranFajl: boolean;\n    private fajlZaUpload: File;\n    private kontrolaZaIgru = new FormControl('', [Validators.required]);\n\n    openSnackBar(message: string, action: string)\n    {\n        this.snackBar.open(message, action, {\n            duration: 2000,\n        });\n    }\n\n    constructor(\n        private igraService: IgraService,\n        private botService: BotService,\n        private snackBar: MatSnackBar\n    )\n    {\n    }\n\n    ngOnInit()\n    {\n        this.igraService.DajSveIgre().subscribe(\n            igre =>\n            {\n                this.igre = igre;\n                console.log(this.igre);\n            }\n        );\n        this.nijeOdabranFajl = false;\n        this.fajlZaUpload = null;\n        this.uspesno = false;\n        this.neuspesno = false;\n    }\n\n    DodajBota(): void\n    {\n        let bot: Bot = new Bot();\n        bot.nazivFajla = this.nazivBota.value;\n        bot.idIgre = this.odabranaIgra;\n\n        if (this.fajlZaUpload != null)\n        {\n\n            this.botService.DodajBota(bot, this.fajlZaUpload).subscribe(odgovor =>\n            {\n                if (odgovor === -1 || odgovor === 0)\n                {\n\n                    // modal za gresku\n                    console.log(odgovor);\n                    this.neuspesno = true;\n                    this.openSnackBar('Greška: Bot nije dodat!', '');\n                }\n                else\n                {\n\n                    // neki FENSI modal za potvrdu da je dodat\n                    console.log(\"dodavanje-bota: dodat\" +odgovor);\n                    this.uspesno = true;\n                    this.nakonDodavanja.emit(odgovor);\n                    this.openSnackBar('Bot uspešno dodat!', '');\n                }\n            });\n        }\n        else\n        {\n            this.nijeOdabranFajl = true;\n        }\n\n\n    }\n\n    PostaviFajl(event): void\n    {\n        console.log(event);\n        let files = event.target.files;\n\n        if (files.length > 0)\n        {\n            this.fajlZaUpload = files[0];\n        }\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/komponente/dodavanje-bota/dodavanje-bota.component.ts","module.exports = \".ikonica\\r\\n{\\r\\n    padding: 0 14px;\\r\\n}\\r\\n\\r\\n.razdelnik\\r\\n{\\r\\n    -webkit-box-flex: 1;\\r\\n        -ms-flex: 1 1 auto;\\r\\n            flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n#logoText\\r\\n{\\r\\n    text-decoration: none;\\r\\n    color: white;\\r\\n    font-family: 'Open Sans', sans-serif;\\r\\n    margin-left: 6px;\\r\\n}\\r\\n\\r\\nul, li\\r\\n{\\r\\n    border: 0;\\r\\n    margin-left: 0;\\r\\n    margin-right: 0;\\r\\n    list-style: none;\\r\\n}\\r\\n\\r\\nhr\\r\\n{\\r\\n    margin-left: -38px;\\r\\n    color: darkgrey;\\r\\n}\\r\\n\\r\\n.linkDugme\\r\\n{\\r\\n    text-decoration: none;\\r\\n    color: cadetblue;\\r\\n}\\r\\n\\r\\n.faksDugme\\r\\n{\\r\\n    font-size: 96%;\\r\\n}\\r\\n\\r\\n.sidebaroviKontejner\\r\\n{\\r\\n    top: 64px;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    position: absolute;\\r\\n    background: none;\\r\\n}\\r\\n\\r\\nmat-sidenav\\r\\n{\\r\\n    width: 248px;\\r\\n}\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/header/header.component.css\n// module id = ./src/app/komponente/header/header.component.css\n// module chunks = main","module.exports = \"<div id=\\\"header\\\">\\n\\n    <mat-toolbar color=\\\"primary\\\">\\n        <mat-toolbar-row class=\\\"mat-elevation-z6\\\">\\n\\n            <button mat-mini-fab (click)=\\\"sidenav.toggle()\\\">\\n                <mat-icon aria-label=\\\"Dugme za leviSidebarMeni\\\">menu</mat-icon>\\n            </button>\\n            <span><a href=\\\"/\\\" id=\\\"logoText\\\">Olimijada</a></span>\\n            <span class=\\\"razdelnik\\\"></span>\\n            <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\"><mat-icon>apps</mat-icon></button>\\n            <mat-menu class=\\\"faksMeni\\\" #menu=\\\"matMenu\\\" xPosition=\\\"after\\\">\\n                <a href=\\\"https://imi.pmf.kg.ac.rs\\\" class=\\\"linkDugme\\\"><button mat-menu-item class=\\\"faksDugme\\\">Institut za Informatiku i Matematiku</button></a>\\n                <a href=\\\"https://www.pmf.kg.ac.rs\\\" class=\\\"linkDugme\\\"><button mat-menu-item class=\\\"faksDugme\\\">Prirodno-matematički fakultet</button></a>\\n            </mat-menu>\\n\\n            <mat-icon class=\\\"ikonica\\\" *ngIf=\\\"prijavljen\\\">notifications</mat-icon>\\n\\n            <button mat-button *ngIf=\\\"!prijavljen\\\" routerLink=\\\"/prijava\\\">\\n                <span class=\\\"ikonica\\\">prijava</span>\\n            </button>\\n\\n            <button mat-button *ngIf=\\\"prijavljen\\\" (click)=\\\"desniSidenav.toggle()\\\">\\n\\t\\t\\t\\t<span *ngIf=\\\"!prijavljen\\\" class=\\\"ikonica\\\">prijava</span>\\n                <img *ngIf=\\\"prijavljen\\\" style=\\\"border-radius: 50%\\\" onchange=\\\"loadFile(event);\\\" id=\\\"fajlUpload\\\" class=\\\"slikaKorisnika\\\" src=\\\"http://localhost:8080/upload/slike/{{username}}.jpg\\\" onerror=\\\"this.src='http://localhost:8080/upload/slike/podrazumevani_avatar.jpg'\\\" height=\\\"32px\\\" width=\\\"32px\\\">\\n\\n            </button>\\n        </mat-toolbar-row>\\n    </mat-toolbar>\\n</div>\\n\\n\\n\\n<div>\\n    <mat-sidenav-container class=\\\"sidebaroviKontejner\\\">\\n\\n\\n        <mat-sidenav #sidenav [mode]=\\\"mode.value\\\">\\n\\n            <ul>\\n                <nav>\\n                    <li><a href=\\\"#\\\" routerLink=\\\"/\\\" class=\\\"linkDugme\\\">Početna</a></li><hr>\\n                    <li><a href=\\\"#\\\" class=\\\"linkDugme\\\">Turniri</a></li><hr>\\n                    <li><a href=\\\"#\\\" class=\\\"linkDugme\\\" (click)=\\\"sidenav.toggle()\\\">Korisnici</a></li><hr>\\n                    <li><a href=\\\"#\\\" class=\\\"linkDugme\\\" (click)=\\\"sidenav.toggle()\\\">Pravila</a></li><hr>\\n                    <li><a href=\\\"#\\\" class=\\\"linkDugme\\\" (click)=\\\"sidenav.toggle()\\\">FAQ</a></li><hr>\\n                    <li><a href=\\\"#\\\" class=\\\"linkDugme\\\" (click)=\\\"sidenav.toggle()\\\">Kontakt</a></li><hr>\\n                    <li><a routerLink=\\\"/o-nama\\\" class=\\\"linkDugme\\\" (click)=\\\"sidenav.toggle()\\\">O nama</a></li><hr>\\n                    <li><a href=\\\"#\\\" class=\\\"linkDugme\\\" (click)=\\\"sidenav.toggle()\\\">fb</a><a href=\\\"#\\\" class=\\\"linkDugme\\\"> insta</a><a href=\\\"#\\\" class=\\\"linkDugme\\\"> tw</a></li><hr>\\n\\n                    <li><a href=\\\"#\\\" class=\\\"linkDugme\\\" (click)=\\\"sidenav.toggle()\\\">.</a></li><hr>\\n                    <li><a href=\\\"#\\\" class=\\\"linkDugme\\\" (click)=\\\"sidenav.toggle()\\\">.</a></li><hr>\\n                    <li><a href=\\\"#\\\" class=\\\"linkDugme\\\" (click)=\\\"sidenav.toggle()\\\">.</a></li><hr>\\n                    <li><a href=\\\"#\\\" routerLink=\\\"/profil\\\" class=\\\"linkDugme\\\" (click)=\\\"sidenav.toggle()\\\">Profil demo</a></li><hr>\\n\\t\\t\\t\\t\\t<li><a href=\\\"#\\\" routerLink=\\\"/botovi\\\" class=\\\"linkDugme\\\" (click)=\\\"sidenav.toggle()\\\">Dodavanje bota</a></li><hr>\\n\\n                </nav>\\n            </ul>\\n        </mat-sidenav>\\n\\n\\n        <mat-sidenav #desniSidenav [mode]=\\\"mode.value\\\" position=\\\"end\\\">\\n\\t\\t\\t<div *ngIf=\\\"!prijavljen\\\">\\n\\t\\t\\t\\t<mat-tab-group [dynamicHeight]=\\\"true\\\">\\n\\t\\t\\t\\t\\t<mat-tab label=\\\"Prijava\\\">\\n\\n\\t\\t\\t\\t\\t\\t<app-prijava (nakonPrijave)=\\\"NakonPrijave($event)\\\"></app-prijava>\\n\\n\\t\\t\\t\\t\\t</mat-tab>\\n\\t\\t\\t\\t\\t<mat-tab label=\\\"Registracija\\\">\\n\\n\\t\\t\\t\\t\\t\\t<app-registracija (nakonPrijave)=\\\"NakonPrijave($event); desniSidenav.toggle();\\\"></app-registracija>\\n\\n\\t\\t\\t\\t\\t</mat-tab>\\n\\t\\t\\t\\t</mat-tab-group>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div *ngIf=\\\"prijavljen\\\">\\n\\t\\t\\t\\t<app-sidebar-profil (nakonOdjave)=\\\"NakonOdjave($event); desniSidenav.toggle();\\\" [prijavljen]=\\\"prijavljen\\\"></app-sidebar-profil>\\n\\t\\t\\t</div>\\n\\n\\n        </mat-sidenav>\\n\\n\\n\\n\\n        <mat-sidenav-content>\\n            <router-outlet></router-outlet>\\n        </mat-sidenav-content>\\n\\n    </mat-sidenav-container>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/header/header.component.html\n// module id = ./src/app/komponente/header/header.component.html\n// module chunks = main","import {Component, NgModule, OnInit} from '@angular/core';\nimport {FormControl, FormControlDirective, FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {ONamaComponent} from '../o-nama/o-nama.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatIconModule} from '@angular/material/icon';\nimport {AppComponent} from '../../app.component';\nimport {AppRoutingModule} from '../../moduli/app-routing.module';\nimport {MatButtonModule} from '@angular/material/button';\nimport {PocetnaComponent} from '../pocetna/pocetna.component';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        MatMenuModule,\n        MatIconModule,\n        MatToolbarModule,\n        MatSidenavModule,\n        MatRadioModule,\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        PocetnaComponent\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.css']\n})\n\n\nexport class HeaderComponent implements OnInit {\n\tprivate prijavljen: boolean = false;\n    mode = new FormControl('over');\n    username;\n\n    constructor() { }\n\n\tngOnInit()\n\t{\n\t\tif (localStorage.getItem(\"username\") != null)\n\t\t{\n\t\t\tthis.prijavljen = true;\n\t\t}\n\t\tthis.username = localStorage.getItem('username');\n\t}\n\n\tNakonPrijave(prijavljen: boolean): void\n\t{\n\t\tthis.prijavljen = prijavljen;\n\n\t}\n\n\tNakonOdjave(odjavljen: boolean): void\n\t{\n\t\tthis.prijavljen = !odjavljen;\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/komponente/header/header.component.ts","module.exports = \".kartica\\r\\n{\\r\\n    max-width: 1048px;\\r\\n}\\r\\n\\r\\n.kartica-header-slika\\r\\n{\\r\\n    background-image: url('https://static.independent.co.uk/s3fs-public/styles/story_large/public/thumbnails/image/2017/04/29/10/beer.jpg');\\r\\n    background-size: cover;\\r\\n}\\r\\n\\r\\n.pocetnaWrapper\\r\\n{\\r\\n    display: table;\\r\\n    margin: 0 auto;\\r\\n    padding: 26px;\\r\\n}\\r\\n\\r\\n.mat-card-title\\r\\n{\\r\\n    font-size: 160%;\\r\\n}\\r\\n\\r\\n.mat-icon\\r\\n{\\r\\n    width: 100px;\\r\\n}\\r\\n\\r\\n#karticaHeaderKorisnik\\r\\n{\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n#headerKorisnika\\r\\n{\\r\\n    display:block;\\r\\n    height: 312px;\\r\\n    width: 100%;\\r\\n    background-image: url('http://www.fullhdwpp.com/wp-content/uploads/programming-and-code-13_www.FullHDWpp.com_.jpg?x69613');\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.pomocniDivHeaderKorisnika\\r\\n{\\r\\n    padding: 26px;\\r\\n}\\r\\n\\r\\n#slikaKorisnika\\r\\n{\\r\\n    height: 128px;\\r\\n    width: 128px;\\r\\n    border: solid 3px #0288D1;\\r\\n    border-radius: 50%;\\r\\n    display: table;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\n#slikaKorisnika:hover\\r\\n{\\r\\n    content:url(\\\"/assets/slike/upload.png\\\");\\r\\n}\\r\\n\\r\\nmat-chip-list\\r\\n{\\r\\n    display: table;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\nmat-chip\\r\\n{\\r\\n    max-width: 512px;\\r\\n    text-align: center;\\r\\n    text-size: 26px;\\r\\n}\\r\\n\\r\\n.redUBoksu\\r\\n{\\r\\n    padding-top: 18px;\\r\\n}\\r\\n\\r\\ngoogle-chart\\r\\n{\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.divUspeh\\r\\n{\\r\\n    display: table;\\r\\n    table-layout: fixed; /*euqal column width*/\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.celija\\r\\n{\\r\\n    display: table-cell;\\r\\n}\\r\\n\\r\\n.celija:hover\\r\\n{\\r\\n    background-color: #f0f0f0;\\r\\n\\r\\n    -webkit-transition-duration: 0.6s;\\r\\n\\r\\n            transition-duration: 0.6s;\\r\\n}\\r\\n\\r\\n.sadrzajCelije\\r\\n{\\r\\n    display: table;\\r\\n    margin: 0 auto;\\r\\n    min-width: 312px;\\r\\n    min-height: 256px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.sadrzajCelije > h4\\r\\n{\\r\\n    font-size: 300%;\\r\\n}\\r\\n\\r\\n@media (max-width: 986px) { /*breakpoint*/\\r\\n    .celija {\\r\\n        display: block;\\r\\n    }\\r\\n}\\r\\n\\r\\nmat-form-field, button {\\r\\n    width: 100%;\\r\\n    font-size: 96%;\\r\\n    margin-top: 10px;\\r\\n\\r\\n}\\r\\n\\r\\n.fajlUpload::-webkit-file-upload-button {\\r\\n    visibility: hidden;\\r\\n}\\r\\n\\r\\n.fajlUpload::before\\r\\n{\\r\\n    content: 'Izaberite sliku';\\r\\n    background: -webkit-linear-gradient(top, #03A9F4, #03A9F4);\\r\\n    border-radius: 10px;\\r\\n    padding: 5px 8px;\\r\\n    color: white;\\r\\n    -webkit-user-select: none;\\r\\n    cursor: pointer;\\r\\n    font-size: 10pt;\\r\\n}\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/izmena-profila/izmena-profila.component.css\n// module id = ./src/app/komponente/izmena-profila/izmena-profila.component.css\n// module chunks = main","module.exports = \"\\n\\n<div class=\\\"pocetnaWrapper\\\">\\n\\n    <mat-card class=\\\"kartica\\\">\\n        <mat-card-header>\\n            <div mat-card-avatar>\\n                <mat-icon aria-label=\\\"Profil\\\" class=\\\"profilIkonicaBox\\\">account_box</mat-icon>\\n            </div>\\n            <mat-card-title>Profil korisnika</mat-card-title>\\n        </mat-card-header>\\n\\n        <mat-divider></mat-divider> <!---- horizontalna linija ---->\\n\\n        <!---- Ovaj deo sadrži sliku korisnika, username i titule ---->\\n        <mat-card-content id=\\\"karticaHeaderKorisnik\\\">\\n            <div id=\\\"headerKorisnika\\\">\\n                <div class=\\\"pomocniDivHeaderKorisnika\\\">\\n                    <img (click)=\\\"fileInputSlika.click()\\\" id=\\\"slikaKorisnika\\\" class=\\\"slikaKorisnika\\\" src=\\\"http://localhost:8080/upload/slike/{{korisnik.username}}.jpg\\\" onerror=\\\"this.src='http://localhost:8080/upload/slike/podrazumevani_avatar.jpg'\\\">\\n                    <img (click)=\\\"fileInputSlika.click()\\\" src=\\\"assets/slike/photo-icon.png\\\" width=\\\"36px\\\" style=\\\"margin-left:53%; margin-top: -26px;\\\"   />\\n                    <br>\\n\\n\\n                    <mat-chip-list class=\\\"mat-chip-list-stacked\\\">\\n                        <mat-chip color=\\\"primary\\\" selected=\\\"true\\\">\\n                            <span style=\\\"font-size: 18pt;\\\">{{ korisnickoIme }}</span>\\n                        </mat-chip>\\n                    </mat-chip-list>\\n                    <br>\\n                    <mat-chip-list>\\n                        <mat-chip color=\\\"grey\\\" selected=\\\"true\\\">Botova: 6</mat-chip>\\n                        <mat-chip color=\\\"accent\\\" selected=\\\"true\\\">Pobeda: 36</mat-chip>\\n                        <mat-chip color=\\\"warn\\\" selected=\\\"true\\\">*Šampion: 2</mat-chip>\\n                    </mat-chip-list>\\n\\n\\n                </div>\\n            </div>\\n        </mat-card-content>\\n\\n\\n        <mat-divider></mat-divider> <!---- horizontalna linija ---->\\n\\n        <!---- Izmena podataka ---->\\n        <mat-card-content>\\n            <form (ngSubmit)=\\\"IzmenaKorisnika()\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Username\\\" value=\\\"{{ korisnickoIme }}\\\" [formControl]=\\\"username\\\" readonly>\\n                </mat-form-field>\\n\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Ime\\\" value=\\\"{{ korisnik.ime }}\\\" [formControl]=\\\"ime\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Prezime\\\" value=\\\"{{ korisnik.prezime }}\\\" [formControl]=\\\"prezime\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Email\\\" value=\\\"{{ korisnik.email }}\\\" [formControl]=\\\"email\\\" required>\\n                    <mat-error *ngIf=\\\"email.invalid\\\">\\n                        {{ GreskaMail() }}\\n                    </mat-error>\\n                </mat-form-field>\\n\\n                <mat-divider></mat-divider> <!---- horizontalna linija ---->\\n                <br>\\n                <mat-form-field>\\n                    <input matInput type=\\\"password\\\" placeholder=\\\"Lozinka\\\" [formControl]=\\\"password\\\" (keyup)=\\\"PoklapanjePassworda()\\\" required>\\n                    <mat-hint align=\\\"start\\\">\\n                        Minimalno 8 karaktera\\n                    </mat-hint>\\n                </mat-form-field>\\n\\n                <mat-divider></mat-divider> <!---- horizontalna linija ---->\\n                <br>\\n\\n                <mat-form-field>\\n                    <input matInput type=\\\"password\\\" placeholder=\\\"Ponovite lozinku\\\" [formControl]=\\\"passwordPonovo\\\" (keyup)=\\\"PoklapanjePassworda()\\\" required>\\n                </mat-form-field>\\n\\n                <span style=\\\"font-weight: bold;\\\">Napomena:</span><span> Lozinku unosite samo ukoliko želite da je promenite!</span>\\n                <span *ngIf=\\\"poklapanjeFlag\\\" style=\\\"color:green;\\\">{{ poklapanjeIspis }}</span>\\n                <span *ngIf=\\\"!poklapanjeFlag\\\" style=\\\"color:red;\\\">{{ poklapanjeIspis }}</span>\\n\\n                <mat-divider></mat-divider> <!---- horizontalna linija ---->\\n                <br><br> <input style=\\\"display: none;\\\"  (change)=\\\"AzurirajSliku($event);\\\" onchange=\\\"loadFile(event);\\\" type=\\\"file\\\" name=\\\"fajlUpload\\\" id=\\\"fajlUpload\\\" class=\\\"fajlUpload\\\" accept=\\\"image/*\\\" #fileInputSlika /> <!---- Sakriveno, tj. display: none; jer se klikom na sliku menja ista. ---->\\n\\n                <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\">\\n                    Sačuvaj izmene\\n                </button>\\n\\n                <mat-icon class=\\\"ikonica\\\" *ngIf=\\\"uspesno\\\">done</mat-icon>\\n                <mat-icon class=\\\"ikonica\\\" *ngIf=\\\"neuspesno\\\">clear</mat-icon>\\n\\n            </form>\\n        </mat-card-content>\\n        <mat-divider></mat-divider> <!---- horizontalna linija ---->\\n\\n        <mat-card-content>\\n            <p class=\\\"redUBoksu\\\">\\n                Profilna slika korisnika mora biti kvadratnog oblika, maksimalne velicine 1MB. Sve slike koje ne budu poštovale pomenuto pravilo biće automatski konvertovane, pa može doći do gubitka kvaliteta iste.\\n            </p>\\n        </mat-card-content>\\n\\n    </mat-card>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/izmena-profila/izmena-profila.component.html\n// module id = ./src/app/komponente/izmena-profila/izmena-profila.component.html\n// module chunks = main","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {KorisnikService} from '../../servisi/korisnik.service';\nimport {Router} from '@angular/router';\nimport {Korisnik} from '../../modeli/Korisnik';\nimport {AuthService} from '../../servisi/auth.service';\n\n@Component({\n  selector: 'app-izmena-profila',\n  templateUrl: './izmena-profila.component.html',\n  styleUrls: ['./izmena-profila.component.css']\n})\nexport class IzmenaProfilaComponent implements OnInit {\n\n    private korisnik: Korisnik = new Korisnik();\n\n    email = new FormControl('', [Validators.required, Validators.email]);\n    username = new FormControl('');\n    korisnickoIme = localStorage.getItem('username');\n    ime = new FormControl('');\n    prezime = new FormControl('');\n    password = new FormControl('', [Validators.minLength(8)]);\n    passwordPonovo = new FormControl('', [Validators.minLength(8)]);\n    poklapanje: boolean;\n    poklapanjeIspis;\n    poklapanjeFlag = false;\n    zauzeto: boolean;\n\n    postojiSlika;\n    slikaAvatara;\n\n\n\n    uspesno = 0;\n    neuspesno = 0;\n\n    constructor\n    (\n        private router: Router,\n        private authService: AuthService,\n        private korisnikService: KorisnikService\n        /*private dialog: MatDialog*/\n        ) { }\n\n    ngOnInit() {\n        this.username.setValue(localStorage.getItem('username'));\n        this.zauzeto = false;\n\n        this.korisnikService.UzmiPodatkeOKorisniku(this.korisnickoIme).subscribe(odg =>\n        {\n            this.korisnik = odg;\n            this.ime.setValue(this.korisnik.ime);\n            this.prezime.setValue(this.korisnik.prezime);\n            this.email.setValue(this.korisnik.email);\n        });\n    }\n\n    GreskaMail(): string\n    {\n        return (this.email.hasError('email') && !this.email.hasError('required')) ? \"Email nije validan\": \"\";\n    }\n\n    GreskaPasswordPonovo(): string\n    {\n        return this.passwordPonovo.hasError('Password') ? \"Lozinke se ne poklapaju\" : \"aaa\";\n    }\n\n    PoklapanjePassworda(): void\n    {\n        this.poklapanje = (this.password.value === this.passwordPonovo.value);\n\n        if(this.poklapanje == true)\n        {\n            this.poklapanjeIspis = 'Lozinke se poklapaju!';\n            this.poklapanjeFlag = true;\n        }\n\n        if(this.poklapanje == false)\n        {\n            this.poklapanjeIspis = 'Lozinke se ne poklapaju!';\n            this.poklapanjeFlag = false;\n        }\n    }\n\n    AzurirajSliku(event): void\n    {\n        console.log(event.target);\n\n        this.korisnikService.AzurirajSlikuKorisnika(event.target.files[0]).subscribe(odgovor =>\n        {\n            //odgovor je ili ekstenzija slike ili -1 ukoliko slika ne postoji.\n            if(odgovor != -1)\n            {\n                this.slikaAvatara = 'http://localhost:8080/upload/slike/' + this.korisnik.username + odgovor;\n            }\n            else\n            {\n                this.slikaAvatara = 'http://localhost:8080/upload/slike/podrazumevani_avatar.jpg';\n            }\n        });\n    }\n\n    IzmenaKorisnika(): void\n    {\n        if (this.email.valid)\n        {\n\n            console.log(\"submitovano\");\n            var korisnik = new Korisnik();\n\n            korisnik.username = this.korisnickoIme;\n            korisnik.ime = this.ime.value;\n            korisnik.prezime = this.prezime.value;\n            korisnik.email = this.email.value;\n            korisnik.password = this.password.value;\n\n            var odgovor;\n\n            this.korisnikService.IzmeniKorisnika(korisnik).subscribe(odg =>\n            {\n                console.log(odg);\n                if (odg.status == 1)\n                {\n                    localStorage.setItem(\"token\",odg.token);\n                    this.uspesno = 1;\n                    // redirekcija na pocetnu stranu kada se registruje\n\n                }\n                else if (odg.status == 0)\n                {\n                    // ispisi da je zauzeto ime (nece da radi ngIf u mat-error-u)\n                    this.neuspesno = 1;\n                }\n                else\n                {\n                    this.neuspesno = 1;\n                    // otvori neki prozor koji ce da obavesti da je doslo do greske\n                }\n            });\n\n        }\n\n    }\n\n    ResetovanjeForme(): void\n    {\n        this.password.reset();\n        this.passwordPonovo.reset();\n        this.email.reset();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/komponente/izmena-profila/izmena-profila.component.ts","module.exports = \"\\r\\n.pocetnaWrapper\\r\\n{\\r\\n    margin: 26px;\\r\\n}\\r\\n\\r\\n.kartica\\r\\n{\\r\\n\\tmax-width: 100%;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/o-nama/o-nama.component.css\n// module id = ./src/app/komponente/o-nama/o-nama.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"pocetnaWrapper\\\">\\n\\n\\t<mat-card class=\\\"kartica\\\">\\n\\t\\t<mat-card-header>\\n\\t\\t\\t<mat-card-title><h1>O nama</h1></mat-card-title>\\n\\t\\t</mat-card-header>\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<p>Olimijada je mesto gde možete programirati svog bota koji će se takmičiti u <a href=\\\"#\\\">sportovima</a> koje nudimo.<br><br> Osnivač Olimijade je <a href=\\\"https://imi.pmf.kg.ac.rs/\\\">Institut za matematiku i informatiku </a>u Kragujevcu.</p>\\n\\t\\t\\t<p> Pogledajte spisak <a href=\\\"#\\\">programskih jezika</a> koje trenutno podržavamo. <br/><br/>Izaberite u kojem <a href=\\\"#\\\">sportu</a> želite da učestvujete i krenite sa kodiranjem sad!</p>\\n\\t\\t\\t<p>Sa srećom!</p>\\n\\t\\t</mat-card-content>\\n  \\t</mat-card>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/o-nama/o-nama.component.html\n// module id = ./src/app/komponente/o-nama/o-nama.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-o-nama',\n  templateUrl: './o-nama.component.html',\n  styleUrls: ['./o-nama.component.css']\n})\nexport class ONamaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit()\n  {\n    \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/komponente/o-nama/o-nama.component.ts","module.exports = \".kartica {\\r\\n    max-width: 400px;\\r\\n}\\r\\n\\r\\n.kartica-header-slika {\\r\\n    background-image: url('https://static.independent.co.uk/s3fs-public/styles/story_large/public/thumbnails/image/2017/04/29/10/beer.jpg');\\r\\n    background-size: cover;\\r\\n}\\r\\n\\r\\n.pocetnaWrapper {\\r\\n    margin: 26px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/pocetna/pocetna.component.css\n// module id = ./src/app/komponente/pocetna/pocetna.component.css\n// module chunks = main","module.exports = \"<div class=\\\"pocetnaWrapper\\\">\\n\\n    <mat-card class=\\\"kartica\\\">\\n        <mat-card-header>\\n            <div mat-card-avatar class=\\\"kartica-header-slika\\\"></div>\\n            <mat-card-title>Naslov kartice</mat-card-title>\\n            <mat-card-subtitle>Podnaslov kartice</mat-card-subtitle>\\n        </mat-card-header>\\n        <img mat-card-image src=\\\"https://static.independent.co.uk/s3fs-public/styles/story_large/public/thumbnails/image/2017/04/29/10/beer.jpg\\\" alt=\\\"Opis slike piva.\\\">\\n        <mat-card-content>\\n            <p>\\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\\n                et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\\n                aliquip ex ea commodo consequat.\\n            </p>\\n        </mat-card-content>\\n        <mat-card-actions>\\n            <button mat-button>PODELI</button>\\n        </mat-card-actions>\\n    </mat-card>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/pocetna/pocetna.component.html\n// module id = ./src/app/komponente/pocetna/pocetna.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pocetna',\n  templateUrl: './pocetna.component.html',\n  styleUrls: ['./pocetna.component.css']\n})\nexport class PocetnaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/komponente/pocetna/pocetna.component.ts","module.exports = \"mat-form-field, button, .div-greska {\\r\\n\\twidth: 90%;\\r\\n\\tfont-size: 96%;\\r\\n\\tmargin-top: 10px;\\r\\n\\tmargin-left: 5%;\\r\\n}\\r\\n\\r\\n.div-greska {\\r\\n\\tcolor: red;\\r\\n\\tfont-size: 90%;\\r\\n\\tmargin-top: 10px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/prijava/prijava.component.css\n// module id = ./src/app/komponente/prijava/prijava.component.css\n// module chunks = main","module.exports = \"<div>\\n\\t<form  (ngSubmit)=\\\"PrijavaKorisnika()\\\">\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<input matInput placeholder=\\\"Korisničko ime\\\" [formControl]=\\\"username\\\" required>\\n\\t\\t</mat-form-field>\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<input matInput type=\\\"password\\\" placeholder=\\\"Lozinka\\\" [formControl]=\\\"password\\\" required>\\n\\t\\t</mat-form-field>\\n\\n\\t\\t<button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\">\\n\\t\\t\\tPrijavite se\\n\\t\\t</button>\\n\\n\\t\\t<div *ngIf=\\\"pogresno\\\" class=\\\"div-greska\\\">\\n\\t\\t\\tPogrešno korisničko ime i/ili lozinka\\n\\t\\t</div>\\n\\t\\t<div *ngIf=\\\"greska\\\">\\n\\t\\t\\tDošlo je do greške\\n\\t\\t</div>\\n\\t</form>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/prijava/prijava.component.html\n// module id = ./src/app/komponente/prijava/prijava.component.html\n// module chunks = main","import {Component, OnInit, Output, EventEmitter} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {KorisnikService} from '../../servisi/korisnik.service';\nimport {AuthService} from '../../servisi/auth.service';\nimport {Korisnik} from '../../modeli/Korisnik';\n\n@Component({\n    selector: 'app-prijava',\n    templateUrl: './prijava.component.html',\n    styleUrls: ['./prijava.component.css']\n})\nexport class PrijavaComponent implements OnInit\n{\n    @Output() nakonPrijave = new EventEmitter<boolean>();\n\n\n    private username = new FormControl('', [Validators.required]);\n    private password = new FormControl('', [Validators.required]);\n    private pogresno: boolean;\n\n    constructor(private korisnikService: KorisnikService, private authService: AuthService)\n    {\n    }\n\n    ngOnInit()\n    {\n        this.pogresno = false;\n    }\n\n    PrijavaKorisnika(): void\n    {\n        if (this.password.valid && this.username.valid)\n        {\n            console.log(\"submitovano\");\n            let korisnik: Korisnik = new Korisnik();\n            korisnik.username = this.username.value;\n            korisnik.password = this.password.value;\n\n            this.korisnikService.PrijaviKorisnika(korisnik).subscribe(odg =>\n            {\n                console.log(odg);\n                if (odg.status == 1)\n                {\n                    this.authService.Prijavi(odg);\n                    // redirekcija na pocetnu stranu kada se uloguje\n                    this.nakonPrijave.emit(true);\n                }\n                else if (odg.status == 0)\n                {\n                    this.ResetovanjeForme();\n                    this.pogresno = true;\n                }\n                else\n                {\n                    this.ResetovanjeForme();\n                    // otvori neki prozor koji ce da obavesti da je doslo do greske\n                }\n            });\n\n\n        }\n    }\n\n    ResetovanjeForme(): void\n    {\n        this.username.reset();\n        this.password.reset();\n        this.pogresno = false;\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/komponente/prijava/prijava.component.ts","module.exports = \".kartica\\r\\n{\\r\\n    max-width: 1048px;\\r\\n}\\r\\n\\r\\n.kartica-header-slika\\r\\n{\\r\\n    background-image: url('https://static.independent.co.uk/s3fs-public/styles/story_large/public/thumbnails/image/2017/04/29/10/beer.jpg');\\r\\n    background-size: cover;\\r\\n}\\r\\n\\r\\n.prikazBotovaWrapper\\r\\n{\\r\\n\\twidth: 426px;\\r\\n\\tdisplay: table;\\r\\n\\tpadding-top: 26px;\\r\\n\\tpadding-right: 26px;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\n@media only screen and (max-width: 655px)\\r\\n{\\r\\n\\t.prikazBotovaWrapper\\r\\n\\t{\\r\\n\\t\\twidth: 326px;\\r\\n\\t\\tdisplay: table;\\r\\n\\t\\tpadding-top: 26px;\\r\\n\\t\\tpadding-right: 26px;\\r\\n    \\tmargin: 0 auto;\\r\\n\\t}\\r\\n}\\r\\n\\r\\nmat-card\\r\\n{\\r\\n\\tmin-width: 100%;\\r\\n}\\r\\n\\r\\n.mat-card-title\\r\\n{\\r\\n    font-size: 160%;\\r\\n}\\r\\n\\r\\n.mat-icon\\r\\n{\\r\\n    width: 100px;\\r\\n}\\r\\n\\r\\n#karticaHeaderKorisnik\\r\\n{\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n#headerKorisnika\\r\\n{\\r\\n    display:block;\\r\\n    height: 312px;\\r\\n    width: 100%;\\r\\n    background-image: url('http://www.fullhdwpp.com/wp-content/uploads/programming-and-code-13_www.FullHDWpp.com_.jpg?x69613');\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.pomocniDivHeaderKorisnika\\r\\n{\\r\\n    padding: 26px;\\r\\n}\\r\\n\\r\\n#slikaKorisnika\\r\\n{\\r\\n    height: 128px;\\r\\n    width: 128px;\\r\\n    border: solid 3px #0288D1;\\r\\n    border-radius: 50%;\\r\\n    display: table;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\nmat-chip-list\\r\\n{\\r\\n    display: table;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\nmat-chip\\r\\n{\\r\\n    max-width: 512px;\\r\\n    text-align: center;\\r\\n    text-size: 26px;\\r\\n}\\r\\n\\r\\n.redUBoksu\\r\\n{\\r\\n    padding-top: 18px;\\r\\n}\\r\\n\\r\\ngoogle-chart\\r\\n{\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.divUspeh\\r\\n{\\r\\n    display: table;\\r\\n    table-layout: fixed; /*euqal column width*/\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.celija\\r\\n{\\r\\n    display: table-cell;\\r\\n}\\r\\n\\r\\n.celija:hover\\r\\n{\\r\\n    background-color: #f0f0f0;\\r\\n\\r\\n    -webkit-transition-duration: 0.6s;\\r\\n\\r\\n            transition-duration: 0.6s;\\r\\n}\\r\\n\\r\\n.sadrzajCelije\\r\\n{\\r\\n    display: table;\\r\\n    margin: 0 auto;\\r\\n    min-width: 312px;\\r\\n    min-height: 256px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.sadrzajCelije > h4\\r\\n{\\r\\n    font-size: 300%;\\r\\n}\\r\\n\\r\\n@media (max-width: 986px) { /*breakpoint*/\\r\\n    .celija {\\r\\n        display: block;\\r\\n    }\\r\\n}\\r\\n\\r\\nmat-form-field, button {\\r\\n    width: 100%;\\r\\n    font-size: 96%;\\r\\n    margin-top: 10px;\\r\\n\\r\\n}\\r\\n\\r\\nbutton {\\r\\n    width: 49%;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/prikaz-botova/prikaz-botova.component.css\n// module id = ./src/app/komponente/prikaz-botova/prikaz-botova.component.css\n// module chunks = main","module.exports = \"<div class=\\\"prikazBotovaWrapper\\\">\\n\\t<mat-card class=\\\"kartica\\\">\\n\\t\\t<mat-card-header>\\n\\t\\t\\t<div mat-card-avatar>\\n\\t\\t\\t\\t<mat-icon class=\\\"ikonica\\\">adb</mat-icon>\\n\\t\\t\\t</div>\\n\\t\\t\\t<mat-card-title>Vaši botovi</mat-card-title>\\n\\t\\t</mat-card-header>\\n\\t\\t<mat-card-content>\\n            <div *ngIf=\\\"botovi == undefined || botovi.length == 0\\\" >\\n                Trenutno nemate nijednog bota\\n            </div>\\n\\t\\t\\t<mat-accordion *ngIf=\\\"botovi != undefined && botovi.length > 0\\\">\\n\\t\\t\\t\\t<mat-expansion-panel *ngFor=\\\"let bot of botovi\\\">\\n\\t\\t\\t\\t  \\t<mat-expansion-panel-header>\\n\\t\\t\\t\\t\\t\\t<mat-panel-title>\\n\\t\\t\\t\\t\\t\\t\\t<!-- ovde treba da bude bot.nazivFajla.substring(1,bot.nazivFajla.lastIndexOf('.'))-->\\n\\t\\t\\t\\t\\t\\t{{ bot.nazivFajla.substring(bot.nazivFajla.indexOf('_')+1,bot.nazivFajla.lastIndexOf('.')) }}\\n\\t\\t\\t\\t\\t\\t</mat-panel-title>\\n\\t\\t\\t\\t\\t</mat-expansion-panel-header>\\n\\n\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<!-- promeni da se ispisuje naziv igre -->\\n\\t\\t\\t\\t\\t\\tIgra: {{ bot.naziv }}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\tDatum upload-a: {{ bot.datumKreiranja.substring(0,bot.datumKreiranja.indexOf(' ')-1) }} <!--  ovde datum -->\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\tDatum poslednje izmene: {{ bot.datumIzmene.substring(0,bot.datumIzmene.indexOf(' ')-1) }} <!-- ovde datum -->\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<button mat-button>\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon>mode_edit</mat-icon>\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t<button mat-button>\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon>delete</mat-icon>\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t</mat-expansion-panel>\\n\\t\\t\\t  </mat-accordion>\\n\\t\\t</mat-card-content>\\n\\n\\t</mat-card>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/prikaz-botova/prikaz-botova.component.html\n// module id = ./src/app/komponente/prikaz-botova/prikaz-botova.component.html\n// module chunks = main","import {Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport {Bot} from '../../modeli/Bot';\nimport {BotService} from '../../servisi/bot.service';\n\n@Component({\n    selector: 'app-prikaz-botova',\n    templateUrl: './prikaz-botova.component.html',\n    styleUrls: ['./prikaz-botova.component.css']\n})\nexport class PrikazBotovaComponent implements OnInit, OnChanges {\n    botovi: any[];\n    @Input() dodatiBot: any;\n\n    constructor(\n        private botService: BotService\n    ) {\n    }\n\n    ngOnInit() {\n        console.log(\"on init\");\n        this.botService.UzmiBotoveKorisnika().subscribe(\n            botovi => {\n                this.botovi = botovi;\n                for (let i = 0; i < this.botovi.length; i++) {\n                    console.log(JSON.stringify(this.botovi[i].nazivFajla));\n                }\n            }\n        );\n\n    }\n\n    ngOnChanges(changes: SimpleChanges): void\n    {\n\n        if (this.botovi !== undefined)\n        {\n            this.botovi.unshift(changes['dodatiBot'].currentValue);\n        }\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/komponente/prikaz-botova/prikaz-botova.component.ts","module.exports = \".kartica {\\r\\n    max-width: 400px;\\r\\n}\\r\\n\\r\\n.kartica-header-slika {\\r\\n    background-color: lightgrey;\\r\\n    background-size: cover;\\r\\n}\\r\\n\\r\\n.pocetnaWrapper {\\r\\n    margin-top: 7%;\\r\\n    display: table;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n}\\r\\n\\r\\n#personIkonica\\r\\n{\\r\\n    display: table;\\r\\n    margin: 6px auto;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/pristup/pristup.component.css\n// module id = ./src/app/komponente/pristup/pristup.component.css\n// module chunks = main","module.exports = \"<div class=\\\"pocetnaWrapper\\\">\\n\\n    <mat-card class=\\\"kartica\\\">\\n\\n        <h1 style=\\\"text-align: center;\\\">Dobrodošli</h1>\\n        <h2 *ngIf=\\\"!this.authService.DaLiJePrijavljen()\\\" style=\\\"text-align: center; color:gray;\\\">Izaberite jednu od opcija!</h2>\\n        <h2 *ngIf=\\\"this.authService.DaLiJePrijavljen()\\\" style=\\\"text-align: center; color:gray;\\\">Uspešno ste se prijavili na sajt!</h2>\\n        <mat-spinner *ngIf=\\\"this.authService.DaLiJePrijavljen()\\\" style=\\\"display: table; margin: 16px auto;\\\"></mat-spinner>\\n\\n        <div *ngIf=\\\"!this.authService.DaLiJePrijavljen()\\\">\\n            <mat-tab-group [dynamicHeight]=\\\"true\\\">\\n                <mat-tab label=\\\"Prijava\\\">\\n                    <app-prijava (nakonPrijave)=\\\"NakonPrijave($event)\\\"></app-prijava>\\n                </mat-tab>\\n                <mat-tab label=\\\"Registracija\\\">\\n                    <app-registracija (nakonPrijave)=\\\"NakonPrijave($event);\\\"></app-registracija>\\n                </mat-tab>\\n            </mat-tab-group>\\n        </div>\\n\\n    </mat-card>\\n\\n</div>\\n<mat-card-content>\\n\\n\\n\\n\\n</mat-card-content>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/pristup/pristup.component.html\n// module id = ./src/app/komponente/pristup/pristup.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport { AuthService } from '../../servisi/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-pristup',\n  templateUrl: './pristup.component.html',\n  styleUrls: ['./pristup.component.css']\n})\nexport class PristupComponent implements OnInit {\n\n    private prijavljen: boolean = false;\n    mode = new FormControl('over');\n    username;\n\n    constructor(private authService : AuthService, private router: Router) { }\n\n    ngOnInit() {\n\n        if (localStorage.getItem(\"username\") != null)\n        {\n            this.prijavljen = true;\n            this.router.navigate(['/pocetna']);\n        }\n        this.username = localStorage.getItem('username');\n    }\n\n    sleep(ms: number)\n    {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    async NakonPrijave(prijavljen: boolean)\n    {\n        this.prijavljen = prijavljen;\n        await this.sleep(1000);\n        window.location.replace(\"/\");\n    }\n\n    NakonOdjave(odjavljen: boolean): void\n    {\n        this.prijavljen = !odjavljen;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/komponente/pristup/pristup.component.ts","module.exports = \".kartica\\r\\n{\\r\\n    max-width: 1048px;\\r\\n}\\r\\n\\r\\n.kartica-header-slika\\r\\n{\\r\\n    background-image: url('https://static.independent.co.uk/s3fs-public/styles/story_large/public/thumbnails/image/2017/04/29/10/beer.jpg');\\r\\n    background-size: cover;\\r\\n}\\r\\n\\r\\n.pocetnaWrapper\\r\\n{\\r\\n    display: table;\\r\\n    margin: 0 auto;\\r\\n    padding: 26px;\\r\\n}\\r\\n\\r\\n.mat-card-title\\r\\n{\\r\\n    font-size: 160%;\\r\\n}\\r\\n\\r\\n.mat-icon\\r\\n{\\r\\n    width: 100px;\\r\\n}\\r\\n\\r\\n#karticaHeaderKorisnik\\r\\n{\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n#headerKorisnika\\r\\n{\\r\\n    display:block;\\r\\n    height: 312px;\\r\\n    width: 100%;\\r\\n    background-image: url('http://www.fullhdwpp.com/wp-content/uploads/programming-and-code-13_www.FullHDWpp.com_.jpg?x69613');\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.pomocniDivHeaderKorisnika\\r\\n{\\r\\n    padding: 26px;\\r\\n}\\r\\n\\r\\n#slikaKorisnika\\r\\n{\\r\\n    height: 128px;\\r\\n    width: 128px;\\r\\n    border: solid 3px #0288D1;\\r\\n    border-radius: 50%;\\r\\n    display: table;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\nmat-chip-list\\r\\n{\\r\\n    display: table;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\nmat-chip\\r\\n{\\r\\n    max-width: 512px;\\r\\n    text-align: center;\\r\\n    text-size: 26px;\\r\\n}\\r\\n\\r\\n.redUBoksu\\r\\n{\\r\\n    padding-top: 18px;\\r\\n}\\r\\n\\r\\ngoogle-chart\\r\\n{\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.divUspeh\\r\\n{\\r\\n    display: table;\\r\\n    table-layout: fixed; /*euqal column width*/\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.celija\\r\\n{\\r\\n    display: table-cell;\\r\\n}\\r\\n\\r\\n.celija:hover\\r\\n{\\r\\n    background-color: #f0f0f0;\\r\\n\\r\\n    -webkit-transition-duration: 0.6s;\\r\\n\\r\\n            transition-duration: 0.6s;\\r\\n}\\r\\n\\r\\n.sadrzajCelije\\r\\n{\\r\\n    display: table;\\r\\n    margin: 0 auto;\\r\\n    min-width: 312px;\\r\\n    min-height: 256px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.sadrzajCelije > h4\\r\\n{\\r\\n    font-size: 300%;\\r\\n}\\r\\n\\r\\n@media (max-width: 986px) { /*breakpoint*/\\r\\n    .celija {\\r\\n        display: block;\\r\\n    }\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/profil/profil.component.css\n// module id = ./src/app/komponente/profil/profil.component.css\n// module chunks = main","module.exports = \"<div class=\\\"pocetnaWrapper\\\">\\n\\n    <mat-card class=\\\"kartica\\\">\\n        <mat-card-header>\\n            <div mat-card-avatar>\\n                <mat-icon aria-label=\\\"Profil\\\" class=\\\"profilIkonicaBox\\\">account_box</mat-icon>\\n            </div>\\n            <mat-card-title>Profil korisnika</mat-card-title>\\n        </mat-card-header>\\n\\n        <mat-divider></mat-divider> <!---- horizontalna linija ---->\\n\\n        <!---- Ovaj deo sadrži sliku korisnika, username i titule ---->\\n        <mat-card-content id=\\\"karticaHeaderKorisnik\\\">\\n            <div id=\\\"headerKorisnika\\\">\\n                <div class=\\\"pomocniDivHeaderKorisnika\\\">\\n                    <img id=\\\"slikaKorisnika\\\" class=\\\"slikaKorisnika\\\" src=\\\"http://localhost:8080/upload/slike/{{korisnik.username}}.jpg\\\" onerror=\\\"this.src='http://localhost:8080/upload/slike/podrazumevani_avatar.jpg'\\\">\\n                    <br>\\n                    <mat-chip-list class=\\\"mat-chip-list-stacked\\\">\\n                        <mat-chip color=\\\"primary\\\" selected=\\\"true\\\">\\n                            <span style=\\\"font-size: 18pt;\\\">{{ korisnik.username }}</span>\\n                        </mat-chip>\\n                    </mat-chip-list>\\n                    <br>\\n                    <mat-chip-list>\\n                        <mat-chip color=\\\"grey\\\" selected=\\\"true\\\">Botova: 6</mat-chip>\\n                        <mat-chip color=\\\"accent\\\" selected=\\\"true\\\">Pobeda: 36</mat-chip>\\n                        <mat-chip color=\\\"warn\\\" selected=\\\"true\\\">*Šampion: 2</mat-chip>\\n                    </mat-chip-list>\\n\\n\\n                </div>\\n            </div>\\n        </mat-card-content>\\n\\n        <mat-divider></mat-divider> <!---- horizontalna linija ---->\\n\\n        <mat-card-content>\\n            <p class=\\\"redUBoksu\\\">\\n                <span>Korisničko ime: </span> <span>{{ korisnik.username }}</span>\\n            </p>\\n        </mat-card-content>\\n\\n        <mat-divider></mat-divider> <!---- horizontalna linija ---->\\n\\n        <mat-card-content>\\n            <p class=\\\"redUBoksu\\\">\\n                <span>Ime: </span> <span>{{ korisnik.ime }}</span>\\n            </p>\\n        </mat-card-content>\\n\\n        <mat-divider></mat-divider> <!---- horizontalna linija ---->\\n\\n        <mat-card-content>\\n            <p class=\\\"redUBoksu\\\">\\n                <span>Prezime: </span> <span>{{ korisnik.prezime }}</span>\\n            </p>\\n        </mat-card-content>\\n\\n        <mat-divider></mat-divider> <!---- horizontalna linija ---->\\n\\n        <mat-card-content>\\n            <p class=\\\"redUBoksu\\\">\\n                <span>E-mail: </span> <span>{{ korisnik.email }}</span>\\n            </p>\\n        </mat-card-content>\\n\\n        <mat-divider></mat-divider> <!---- horizontalna linija ---->\\n\\n        <mat-card-content>\\n\\n            <h2 style=\\\"padding-top: 16px;\\\">Statistika</h2><mat-divider></mat-divider>\\n\\n            <div class=\\\"divUspeh\\\">\\n                <div class=\\\"celija\\\">\\n                    <div class=\\\"sadrzajCelije\\\">\\n                        <h3>Uspeh</h3>\\n                        <google-chart [data]=\\\"pieChartData\\\"></google-chart>\\n                    </div>\\n                </div>\\n                <div class=\\\"celija\\\">\\n                    <div class=\\\"sadrzajCelije\\\">\\n                        <h3>Najuspešniji igrač</h3>\\n                        <h4>Super Mario</h4>\\n                        <p>Pobeda: 7</p>\\n                    </div>\\n                </div>\\n                <div class=\\\"celija\\\">\\n                    <div class=\\\"sadrzajCelije\\\">\\n                        <h3>Poslednji turnir</h3>\\n                        <h4>wIMIbledon</h4>\\n                        <p>Pozicija: 3</p>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </mat-card-content>\\n\\n        <mat-divider></mat-divider> <!---- horizontalna linija ---->\\n\\n        <mat-card-content>\\n            <p class=\\\"redUBoksu\\\">\\n                *Šampion kategorija na sajtu predstavlja broj turnira na kojima je korisnik zauzeo prvo mesto, ukoliko je u pitanju ligaško takmičenje, odnosno ukoliko je pobedio u finalu kup takmičenja.\\n            </p>\\n        </mat-card-content>\\n        <mat-card-actions>\\n            <button mat-button>PODELI</button>\\n            <button mat-button routerLink=\\\"/izmena-profila\\\">IZMENI</button>\\n        </mat-card-actions>\\n    </mat-card>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/profil/profil.component.html\n// module id = ./src/app/komponente/profil/profil.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {Korisnik} from '../../modeli/Korisnik';\nimport {KorisnikService} from '../../servisi/korisnik.service';\nimport {AuthService} from '../../servisi/auth.service';\n\n@Component({\n  selector: 'app-profil',\n  templateUrl: './profil.component.html',\n  styleUrls: ['./profil.component.css']\n})\nexport class ProfilComponent implements OnInit\n{\n\n    korisnik = new Korisnik();\n\n    pieChartData;\n\n    constructor(\n        private authService: AuthService,\n        private korisnikService: KorisnikService\n    ) { }\n\n    ngOnInit() {\n\n        let username = localStorage.getItem('username');\n\n        this.korisnikService.UzmiPodatkeOKorisniku(username).subscribe(odg =>\n        {\n            this.korisnik = odg;\n        });\n\n        this.pieChartData = {\n            chartType: 'PieChart',\n            dataTable: [\n                ['Ishod', 'Broj'],\n                ['Pobede', 36],\n                ['Porazi', 24],\n                ['Nerešeno', 7]\n            ],\n            options:\n                {\n                    legend: 'none',\n                    chartArea: { top: 4, width: '96%', height: '96%'},\n                    slices: {\n                        0: {color: '#2196F3'},\n                        1: {color: '#D32F2F'},\n                        2: {color: 'grey'}\n                    },\n                    backgroundColor : 'none'\n                }\n\n        };\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/komponente/profil/profil.component.ts","module.exports = \"mat-form-field, button {\\r\\n    width: 90%;\\r\\n    font-size: 96%;\\r\\n    margin-top: 10px;\\r\\n    margin-left: 5%;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/registracija/registracija.component.css\n// module id = ./src/app/komponente/registracija/registracija.component.css\n// module chunks = main","module.exports = \"<div>\\n\\t<form (ngSubmit)=\\\"RegistracijaKorisnika()\\\">\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<input matInput placeholder=\\\"Email\\\" [formControl]=\\\"email\\\" required>\\n\\t\\t\\t<mat-error *ngIf=\\\"email.invalid\\\">\\n\\t\\t\\t\\t{{ GreskaMail() }}\\n\\t\\t\\t</mat-error>\\n\\t\\t</mat-form-field>\\n\\n\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<input matInput placeholder=\\\"Korisničko ime\\\" [formControl]=\\\"username\\\" required>\\n\\t\\t\\t<mat-error *ngIf=\\\"zauzeto\\\">\\n\\t\\t\\t\\tKorisnicko ime je zauzeto\\n\\t\\t\\t</mat-error>\\n\\t\\t</mat-form-field>\\n\\n\\n\\t\\t<mat-form-field>\\n\\t\\t\\t\\t<input matInput type=\\\"password\\\" placeholder=\\\"Lozinka\\\" [formControl]=\\\"password\\\" (keyup)=\\\"PoklapanjePassworda()\\\" required>\\n\\t\\t\\t\\t<mat-hint align=\\\"start\\\">\\n\\t\\t\\t\\t\\tMinimalno 8 karaktera\\n\\t\\t\\t\\t</mat-hint>\\n\\t\\t</mat-form-field>\\n\\n\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<input matInput type=\\\"password\\\" placeholder=\\\"Ponovite lozinku\\\" [formControl]=\\\"passwordPonovo\\\" (keyup)=\\\"PoklapanjePassworda()\\\" required>\\n\\t\\t</mat-form-field>\\n\\n        <span *ngIf=\\\"poklapanjeFlag\\\" style=\\\"color:green; margin-left: 14px;\\\">{{ poklapanjeIspis }}</span>\\n        <span *ngIf=\\\"!poklapanjeFlag\\\" style=\\\"color:red; margin-left: 14px;\\\">{{ poklapanjeIspis }}</span>\\n\\n\\t\\t<button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\">\\n\\t\\t\\tRegistrujte se\\n\\t\\t</button>\\n\\t</form>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/registracija/registracija.component.html\n// module id = ./src/app/komponente/registracija/registracija.component.html\n// module chunks = main","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { KorisnikService } from '../../servisi/korisnik.service';\nimport {FormControl, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { PasswordValidator } from '../../password-validator.directive';\nimport { Korisnik } from '../../modeli/Korisnik';\nimport { AuthService } from '../../servisi/auth.service';\n\n@Component({\n  selector: 'app-registracija',\n  templateUrl: './registracija.component.html',\n  styleUrls: ['./registracija.component.css']\n})\nexport class RegistracijaComponent implements OnInit {\n\t@Output() nakonPrijave  = new EventEmitter<boolean>();\n\n\tprivate email = new FormControl('', [Validators.required, Validators.email]);\n\tprivate username = new FormControl('', [Validators.required]);\n\tprivate password = new FormControl('', [Validators.required, Validators.minLength(8)]);\n\tprivate passwordPonovo = new FormControl('', [Validators.required, Validators.minLength(8)]);\n    poklapanje: boolean;\n    poklapanjeIspis;\n    poklapanjeFlag = false;\n\tprivate zauzeto: boolean;\n\n\tconstructor(\n\t\tprivate korisnikService: KorisnikService,\n\t\tprivate router: Router,\n\t\tprivate authService: AuthService\n\t) { }\n\n\tngOnInit() {\n\t\tthis.zauzeto = false;\n\t}\n\n\tGreskaMail(): string\n\t{\n\t\treturn (this.email.hasError('email') && !this.email.hasError('required')) ? \"Email nije validan\": \"\";\n\t}\n\n\tGreskaPasswordPonovo(): string\n\t{\n\t\t//console.log(this.passwordPonovo.value);\n\t\t//console.log(this.password.value);\n\t\treturn this.passwordPonovo.hasError('Password') ? \"Lozinke se ne poklapaju\" : \"aaa\";\n\t}\n\n\tPoklapanjePassworda(): void\n\t{\n        this.poklapanje = (this.password.value === this.passwordPonovo.value);\n\n        if(this.poklapanje == true)\n        {\n            this.poklapanjeIspis = 'Lozinke se poklapaju!';\n            this.poklapanjeFlag = true;\n        }\n\n        if(this.poklapanje == false)\n        {\n            this.poklapanjeIspis = 'Lozinke se ne poklapaju!';\n            this.poklapanjeFlag = false;\n        }\n\t}\n\n\tRegistracijaKorisnika(): void\n\t{\n\t\tif (this.email.valid && this.password.valid && this.passwordPonovo.valid && this.username.valid)\n\t\t{\n\t\t\tconsole.log(\"submitovano\");\n\t\t\tlet korisnik: Korisnik = new Korisnik();\n\t\t\tkorisnik.username = this.username.value;\n\t\t\tkorisnik.password = this.password.value;\n\t\t\tkorisnik.email = this.email.value;\n\n\t\t\tvar odgovor;\n\n\t\t\tthis.korisnikService.RegistrujKorisnika(korisnik).subscribe(odg =>\n\t\t\t{\n\t\t\t\tconsole.log(odg);\n\t\t\t\tif (odg.status == 1)\n\t\t\t\t{\n\t\t\t\t\tthis.authService.Prijavi(odg);\n\t\t\t\t\t// redirekcija na pocetnu stranu kada se registruje\n\t\t\t\t\tthis.nakonPrijave.emit(true);\n\t\t\t\t}\n\t\t\t\telse if (odg.status == 0)\n\t\t\t\t{\n\t\t\t\t\t// ispisi da je zauzeto ime (nece da radi ngIf u mat-error-u)\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// otvori neki prozor koji ce da obavesti da je doslo do greske\n\t\t\t\t}\n\t\t\t});\n\n\n\t\t}\n\n\t}\n\n\tResetovanjeForme(): void\n\t{\n\t\tthis.username.reset();\n\t\tthis.password.reset();\n\t\tthis.passwordPonovo.reset();\n\t\tthis.email.reset();\n\t\tthis.zauzeto = false;\n\n\t}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/komponente/registracija/registracija.component.ts","module.exports = \"#content {\\r\\n\\twidth: 95%;\\r\\n\\tmargin-left: 2%;\\r\\n\\tmargin-top: 10px;\\r\\n\\ttext-align: left;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n\\twidth: 100%;\\r\\n\\ttext-align: left;\\r\\n}\\r\\n\\r\\n.float-left {\\r\\n\\tfloat: left;\\r\\n}\\r\\n\\r\\n.float-right {\\r\\n\\tfloat: right;\\r\\n}\\r\\n\\r\\n.sidebarKorisnikHeader\\r\\n{\\r\\n    padding: 26px;\\r\\n}\\r\\n\\r\\n.sidebarKorisnikHeader img\\r\\n{\\r\\n    border-radius: 50%;\\r\\n    display: table;\\r\\n    margin: 0 auto;\\r\\n    border: solid 3px #0288D1;\\r\\n}\\r\\n\\r\\n.sidebarKorisnikHeader p\\r\\n{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.odjava button\\r\\n{\\r\\n    position: fixed;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n    color: black;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/sidebar-profil/sidebar-profil.component.css\n// module id = ./src/app/komponente/sidebar-profil/sidebar-profil.component.css\n// module chunks = main","module.exports = \"<div>\\n\\n    <div class=\\\"sidebarKorisnikHeader\\\">\\n        <img class=\\\"slikaKorisnika\\\" src=\\\"http://localhost:8080/upload/slike/{{korisnik.username}}.jpg\\\" onerror=\\\"this.src='http://localhost:8080/upload/slike/podrazumevani_avatar.jpg'\\\" height=\\\"124px\\\" width=\\\"124px\\\">\\n\\n        <p>Korisničko ime: <br><span>{{ korisnik.username }}</span></p>\\n        <p><span>{{ korisnik.ime }}</span> <span>{{ korisnik.prezime }}</span></p>\\n        <p><a href=\\\"#\\\" routerLink=\\\"/profil\\\"><span>Uredi profil</span></a></p>\\n\\n    </div>\\n\\n    <mat-divider></mat-divider> <!---- horizontalna linija ---->\\n\\n    <div class=\\\"sidebarSadrzaj\\\">\\n        <button mat-button routerLink=\\\"botovi\\\">\\n            <mat-icon class=\\\"ikonica\\\">adb</mat-icon>\\n            <span class=\\\"ikonica\\\">Botovi</span>\\n        </button>\\n        <button mat-button>\\n            <mat-icon class=\\\"ikonica\\\">directions_run</mat-icon>\\n            <span class=\\\"ikonica\\\">Igrači</span>\\n        </button>\\n        <button mat-button>\\n            <mat-icon class=\\\"ikonica\\\">group_add</mat-icon>\\n            <span class=\\\"ikonica\\\">Timovi</span>\\n        </button>\\n    </div>\\n\\n    <mat-divider></mat-divider> <!---- horizontalna linija ---->\\n\\n    <div class=\\\"odjava\\\">\\n        <button mat-button class=\\\"odjava\\\" (click)=\\\"Odjava();\\\">\\n            <mat-icon class=\\\"ikonica\\\">highlight_off</mat-icon>\\n            <span class=\\\"ikonica\\\">odjava</span>\\n        </button>\\n    </div>\\n\\n    <mat-divider></mat-divider> <!---- horizontalna linija ---->\\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/komponente/sidebar-profil/sidebar-profil.component.html\n// module id = ./src/app/komponente/sidebar-profil/sidebar-profil.component.html\n// module chunks = main","import {Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\nimport {AuthService} from '../../servisi/auth.service';\nimport {Korisnik} from '../../modeli/Korisnik';\nimport {KorisnikService} from '../../servisi/korisnik.service';\n\n@Component({\n    selector: 'app-sidebar-profil',\n    templateUrl: './sidebar-profil.component.html',\n    styleUrls: ['./sidebar-profil.component.css']\n})\nexport class SidebarProfilComponent implements OnInit\n{\n    @Input() prijavljen: boolean;\n    @Output() nakonOdjave = new EventEmitter<boolean>();\n\n    private korisnik: Korisnik = new Korisnik();\n\n    constructor(\n        private authService: AuthService,\n        private korisnikService: KorisnikService\n    )\n    {\n    }\n\n    ngOnInit()\n    {\n        this.prijavljen = true;\n\n        let username = localStorage.getItem('username');\n\n        this.korisnikService.UzmiPodatkeOKorisniku(username).subscribe(odg =>\n        {\n            this.korisnik = odg;\n        });\n    }\n\n    Odjava(): void\n    {\n        this.authService.Odjavi();\n        this.nakonOdjave.emit(true);\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/komponente/sidebar-profil/sidebar-profil.component.ts","export class Bot\r\n{\r\n    id: number;\r\n    idKorisnika: number;\r\n    idIgre: number;\r\n    nazivFajla: string;\r\n    datumKreiranja: string;\r\n    datumIzmene: string;\r\n    verzija: number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modeli/Bot.ts","export class Korisnik\r\n{\r\n    id: number;\r\n    username: string;\r\n    password: string;\r\n    email: string;\r\n    ime: string;\r\n    prezime: string;\r\n    urlSlike: string;\r\n    datumRegistracije: string;\r\n    banovan: number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modeli/Korisnik.ts","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from '../app.component';\nimport { HeaderComponent } from '../komponente/header/header.component';\n\nimport { ONamaComponent } from '../komponente/o-nama/o-nama.component';\nimport { PocetnaComponent } from '../komponente/pocetna/pocetna.component';\nimport { ProfilComponent } from '../komponente/profil/profil.component';\nimport {IzmenaProfilaComponent} from '../komponente/izmena-profila/izmena-profila.component';\nimport { AuthGuardService } from '../servisi/auth-guard.service';\n//import { DodavanjeBotaComponent } from '../komponente/dodavanje-bota/dodavanje-bota.component';\n//import { PrikazBotovaComponent } from '../komponente/prikaz-botova/prikaz-botova.component';\nimport { BotoviComponent } from '../komponente/botovi/botovi.component';\nimport {PristupComponent} from '../komponente/pristup/pristup.component';\n\n// mozda ovo ovde treba izmeniti\nconst routes: Routes =\n[\n    { path: '', redirectTo: '/pocetna', pathMatch: 'full' },\n    { path: 'pocetna', component: PocetnaComponent },\n\t{ path: 'o-nama', component: ONamaComponent },\n    { path: 'profil', component: ProfilComponent, canActivate: [ AuthGuardService ] },\n\t{ path: 'izmena-profila', component: IzmenaProfilaComponent, canActivate: [ AuthGuardService ] },\n\t{ path: 'botovi', component: BotoviComponent, canActivate: [ AuthGuardService ] },\n    { path: 'prijava', component: PristupComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/moduli/app-routing.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatListModule } from '@angular/material/list';\nimport {RouterModule} from '@angular/router';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\nconst MATERIAL_MODULES = [\n    CommonModule,\n    MatMenuModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatRadioModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTabsModule,\n    MatDividerModule,\n    MatChipsModule,\n\tMatListModule,\n\tMatSelectModule,\n\tMatExpansionModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule\n];\n\n@NgModule({\n    imports: [ MATERIAL_MODULES ],\n    exports: [ MATERIAL_MODULES ],\n    declarations: []\n})\nexport class MaterialkomponenteModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/moduli/materialkomponente.module.ts","import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl } from '@angular/forms'; \n\nexport function PasswordValidator(password: RegExp | string): ValidatorFn {\n\treturn (control: AbstractControl): {[key: string]: any} => {\n\t\tvar jednako = false;\n\t\tconsole.log(password);\n\t\tconsole.log(control.value);\n\t\tif (password instanceof RegExp)\n\t\t{\n\t\t\tjednako = password.test(control.value);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tjednako = (password == control.value);\n\t\t}\n\t\t\n\t\treturn jednako ? null : { 'Password' : 'ne poklapaju se' } ;\n\t}\n}\n   \n@Directive({\n\tselector: '[passwordValidator]',\n\tproviders: []\n})\nexport class PasswordValidatorDirective {\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/password-validator.directive.ts","import { Injectable } from '@angular/core';\nimport { CanActivate, RouterStateSnapshot, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n\tconstructor(private router: Router, private authService: AuthService) { }\n\t\n\tcanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n\t\tlet url: string = state.url;\n\n\t\treturn this.ProveriDaLiJePrijavljen();\n\t}\n\n\tProveriDaLiJePrijavljen(): boolean\n\t{\n\t\tlet prijavljen = this.authService.DaLiJePrijavljen();\n\n\t\tif (prijavljen)\n\t\t{\n\t\t\tconsole.log('Guard: prijavljen');\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log('Guard: nije prijavljen');\n\t\t\tthis.router.navigate(['/pocetna']);\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/servisi/auth-guard.service.ts","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class AuthService {\n\tprivate prijavljen: boolean;\n\n  \tconstructor(private router: Router) { }\n\n\tPrijavi(odgovor: any):void\n\t{\n\t\tthis.prijavljen = true;\n\t\tlocalStorage.setItem(\"token\",odgovor.token);\n\t\tlocalStorage.setItem(\"username\",odgovor.korisnik.username);\n\t}\n\n\tOdjavi():void\n\t{\n\t\tthis.prijavljen = false;\n\t\tlocalStorage.clear();\n\t\tthis.router.navigate(['/pocetna']);\n\t}\n\n\tDaLiJePrijavljen():boolean\n\t{\n\t\tif (localStorage.getItem(\"token\") != undefined)\n\t\t{\n\t\t\tthis.prijavljen = true;\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.prijavljen = false;\n\t\t\treturn false;\n\t\t}\n\t\t//return this.prijavljen;\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/servisi/auth.service.ts","import {Injectable} from '@angular/core';\nimport {Bot} from '../modeli/Bot';\nimport {Observable} from 'rxjs/Observable';\nimport {environment} from '../../environments/environment';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n\n@Injectable()\nexport class BotService {\n\n    constructor(\n        private http: HttpClient\n    ) { }\n\n    // bot: Bot,\n    DodajBota(bot: Bot, fajlZaUpload: File): Observable<any>\n    {\n        let url = environment.serverUrl + 'dodajBota';\n\n        const bearerHeader: string = 'Bearer ' + localStorage.getItem('token');\n        let headers = new HttpHeaders().set('authorization', bearerHeader);\n\n        let formData = new FormData();\n        formData.append('file', fajlZaUpload, fajlZaUpload.name);\n        formData.append('username', localStorage.getItem('username'));\n        formData.append('idIgre', bot.idIgre.toString());\n        formData.append('naziv', bot.nazivFajla);\n\n        //headers.append('authorization', bearerHeader);\n        //headers.append('authorization', bearerHeader);\n        /*\n        let zahtev =\n        {\n            username: localStorage.getItem('username'),\n            bot: bot,\n            fajl: fajl\n        };\n        */\n\n        //console.log(zahtev.fajl);\n\n        return this.http.post(url, formData, {headers: headers});\n    }\n\n    // vraca objekat:\n    // id,naziv (igre),nazivFajla,idKorisnika\n    UzmiBotoveKorisnika(): Observable<any>\n    {\n        let url = environment.serverUrl + localStorage.getItem('username') + '/botovi';\n\n        const bearerHeader: string = 'Bearer ' + localStorage.getItem('token');\n        let headers = new HttpHeaders().set('authorization', bearerHeader);\n\n        return this.http.get(url, {headers: headers});\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/servisi/bot.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { environment } from '../../environments/environment';\nimport { Igra } from '../modeli/Igra';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class IgraService {\n\t\n\tconstructor(\n\t\tprivate http: HttpClient\n\t) { }\n\n\tDajSveIgre(): Observable<Igra[]>\n\t{\n\t\tlet url = environment.serverUrl + 'sveIgre';\n\n\t\treturn this.http.get<Igra[]>(url);\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/servisi/igra.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/observable';\nimport { environment } from '../../environments/environment';\nimport { AuthService } from './auth.service';\nimport { Korisnik } from '../modeli/Korisnik'\n\n@Injectable()\nexport class KorisnikService {\n\n\tconstructor(private http: HttpClient, private authService: AuthService) { }\n\n\t// request = admin(integer,0),korisnik(Korisnik)\n\t// response = status(integer),token?(string),korisnik?(Korisnik)\n\tRegistrujKorisnika(korisnik: Korisnik): Observable<any>\n\t{\n\t\tlet url = environment.serverUrl + 'registracija';\n\n\t\tlet zahtev =\n\t\t{\n\t\t\tadmin: 0,\n\t\t\tkorisnik: korisnik\n\t\t}\n\n\t\treturn this.http.post(url,zahtev);\n\t}\n\n\t// request = admin(integer,0),korisnik(Korisnik)\n\t// response = status(integer),token?(string),korisnik?(Korisnik)\n\tPrijaviKorisnika(korisnik: Korisnik): Observable<any>\n\t{\n\t\tlet url = environment.serverUrl + 'prijava';\n\n\t\tlet zahtev =\n\t\t{\n\t\t\tadmin: 0,\n\t\t\tkorisnik: korisnik\n\t\t}\n\n\t\treturn this.http.post(url, zahtev);\n\t}\n\n\t/* Menja podatke na profilu korisnika */\n    IzmeniKorisnika(korisnik): Observable<any>\n    {\n        let url = environment.serverUrl + 'uzmi-podatke';\n\n        return this.http.post(url, korisnik);\n\t}\n\n\tUzmiPodatkeOKorisniku(username: string): Observable<any>\n\t{\n\t\tlet url = environment.serverUrl + 'korisnik/' + username;\n\n\t\treturn this.http.get(url);\n\t}\n\n\tAzurirajSlikuKorisnika(slika: File): Observable<any>\n    {\n\n        let url = environment.serverUrl + 'uploadAvatara';\n        const bearerHeader: string = 'Bearer ' + localStorage.getItem('token');\n\n        let headers = new HttpHeaders().set('authorization',bearerHeader);\n        let formData = new FormData();\n        formData.append('slika',slika, slika.name);\n        formData.append('username',localStorage.getItem('username'));\n\n        return this.http.post(url, formData, { headers: headers });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/servisi/korisnik.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  serverUrl: \"http://localhost:8080/\" \n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}